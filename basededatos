TRANSFORMACIONES:
map:
from pyspark import SparkContext
sc = SparkContext("local", "Ejemplo de map")
rdd = sc.parallelize([1, 2, 3, 4, 5])
rdd_multiplicado = rdd.map(lambda x: x * 2)
print(rdd_multiplicado.collect())

filter:

from pyspark import SparkContext
sc = SparkContext("local", "Ejemplo de filter")
rdd = sc.parallelize([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
rdd_pares = rdd.filter(lambda x: x % 2 == 0)
print(rdd_pares.collect())

flatMap:

from pyspark import SparkContext
sc = SparkContext("local", "Ejemplo de flatMap")
rdd = sc.parallelize(["Hola mundo", "Aprendiendo Spark", "flatMap es útil"])
rdd_palabras = rdd.flatMap(lambda frase: frase.split(" "))
print(rdd_palabras.collect())

unión:

from pyspark import SparkContext
sc = SparkContext("local", "Ejemplo de union")
rdd_pares = sc.parallelize([2, 4, 6, 8])
rdd_impares = sc.parallelize([1, 3, 5, 7])
rdd_union = rdd_pares.union(rdd_impares)
print(rdd_union.collect())

intersection:

from pyspark import SparkContext
sc = SparkContext("local", "Ejemplo de intersection")
rdd1 = sc.parallelize([1, 2, 3, 4, 5])
rdd2 = sc.parallelize([3, 4, 5, 6, 7])
rdd_interseccion = rdd1.intersection(rdd2)
print(rdd_interseccion.collect())


ACCIONES: 
